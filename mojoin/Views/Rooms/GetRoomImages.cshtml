@model IEnumerable<mojoin.Models.RoomImage>

@{
    <link href="~/css/detail.css" rel="stylesheet" />
    int count = 1;
    int index = 0;
}
<div class="slider " style="z-index: 0;">
    <i class="fa fa-angle-left slider-prev" style="display: flex;"></i>
    <div class="slider-wrapper" style="position: relative;">
        <div class="slider-main">
            @foreach (var item in Model)
            {
                count++;
                <div class="slider-item">
                    @if (count == 2 && !string.IsNullOrEmpty(item.Room.Video))
                    {
                        <!-- Đây là phần hiển thị video, có thể sử dụng thẻ iframe cho YouTube -->
                        <iframe style="width: 100% ;height:50% "   src=@Model.FirstOrDefault()?.Room.Video frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                    }
                    else
                    {
                        <img src="@item.Image" alt="">
                    }
                </div>
            }
        </div>

    </div>
    <span class="countpage">@(index + 1)/@count</span>
    <i class="fa fa-angle-right slider-next" style="display: flex;"></i>
</div>
<script>
    window.addEventListener("load", function () {
        const slider = this.document.querySelector(".slider");
        const sliderMain = this.document.querySelector(".slider-main");
        const sliderItems = this.document.querySelectorAll(".slider-item");
        const nextBtn = this.document.querySelector(".slider-next");
        const prevBtn = this.document.querySelector(".slider-prev");
        const dotItems = this.document.querySelectorAll(".slider-dot-item");
        const sliderItemWidth = sliderItems[0].offsetWidth;
        const slidesLength = sliderItems.length;
        const count = this.document.querySelector(".countpage");
        //document.querySelector("span").innerText = `${index + 1}/${slidesLength}`;
        let postionX = 0;
        let index = 0;
        nextBtn.addEventListener("click", function () {
            handleChangeSlide(1);
        });
        prevBtn.addEventListener("click", function () {
            handleChangeSlide(-1);
        });
        [...dotItems].forEach(item => item.addEventListener("click", function (e) {
            const slideIndex = parseInt(e.target.dataset.index);
            [...dotItems].forEach(el => el.classList.remove("active"));
            e.target.classList.add("active");
            index = slideIndex;
            postionX = -1 * index * sliderItemWidth;
            sliderMain.style = `transform: translateX(${postionX}px)`;
        }));
        function handleChangeSlide(direction) {
            if (direction == 1) {
                if (index >= slidesLength - 1) {
                    index = slidesLength - 1;
                    return;
                }
                postionX = postionX - sliderItemWidth;
                sliderMain.style = `transform: translateX(${postionX}px)`;
                console.log(index);
                index++;
                count.innerHTML = `${index + 1}/${slidesLength}`;
            } else if (direction == -1) {
                if (index <= 0) {
                    index = 0;
                    return;
                }
                postionX = postionX + sliderItemWidth;
                sliderMain.style = `transform: translateX(${postionX}px)`;
                console.log("prev slide");
                index--;
                count.innerHTML = `${index + 1}/${slidesLength}`;
            }

        }
    })
</script>

